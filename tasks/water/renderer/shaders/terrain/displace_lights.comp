#version 460
#extension GL_GOOGLE_include_directive : require

#include "../Light.h"
#include "UniformParams.h"

layout(local_size_x = 128) in;

layout(binding = 0) uniform params {
  UniformParams uniformParams;
};

layout(binding = 1, r32f) readonly uniform image2D terrainMap;

layout(binding = 2) buffer lights {
    Light lightsBuffer[];
};

void main() {
    uint index = uint(gl_GlobalInvocationID.x);
    if (index >= uniformParams.lightsAmount) {
        return;
    }

    Light currentLight = lightsBuffer[index];

    ivec2 lightPosOnTerrainMap = ivec2(currentLight.pos.xz);

    float height = (imageLoad(terrainMap, lightPosOnTerrainMap).x - uniformParams.heightOffset) * uniformParams.heightAmplifier;

    currentLight.worldPos = vec4(currentLight.pos, 1);
    currentLight.worldPos.y += height;

    lightsBuffer[index] = currentLight;
}
